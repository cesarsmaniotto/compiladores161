Terminals unused in grammar

   T_FUNC
   T_RETURN
   T_FUNCDECL


State 37 conflicts: 13 shift/reduce
State 38 conflicts: 13 shift/reduce
State 65 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: lines

    2 lines: line
    3      | lines line

    4 line: T_NL
    5     | cmd
    6     | T_DEF T_TYPE T_DECL T_ID componentDecl T_END T_DEF

    7 cmd: decl
    8    | T_ID T_ATRIB expr T_NL
    9    | T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL
   10    | T_WHILE expr T_DO lines T_END T_WHILE
   11    | T_IF expr T_THEN lines T_END T_IF
   12    | T_IF expr T_THEN lines T_ELSE lines T_END T_IF

   13 componentDecl: decl
   14              | componentDecl decl

   15 decl: type T_DECL var T_NL
   16     | type T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL

   17 expr: value
   18     | T_PAREN_L expr T_PAREN_R
   19     | expr op expr
   20     | expr error

   21 varAr: T_ID
   22      | varAr T_VIRGULA T_ID

   23 var: T_ID
   24    | var T_VIRGULA T_ID

   25 value: T_INT
   26      | T_DOUBLE
   27      | T_TRUE
   28      | T_FALSE
   29      | unOp
   30      | T_ID
   31      | T_ID T_COLCH_L value T_COLCH_R

   32 unOp: T_MINUS expr
   33     | T_NOT expr

   34 type: T_TDOUBLE
   35     | T_TINT
   36     | T_TBOOL

   37 op: T_PLUS
   38   | T_MULT
   39   | T_MINUS
   40   | T_DIV
   41   | T_IGUAL
   42   | T_DIFERENTE
   43   | T_MAIOR
   44   | T_MENOR
   45   | T_MAIOR_IGUAL
   46   | T_MENOR_IGUAL
   47   | T_AND
   48   | T_OR


Terminals, with rules where they appear

$end (0) 0
error (256) 20
T_ID (258) 6 8 9 21 22 23 24 30 31
T_INT (259) 16 25
T_DOUBLE (260) 26
T_TRUE (261) 27
T_FALSE (262) 28
T_PLUS (263) 37
T_MULT (264) 38
T_NL (265) 4 8 9 15 16
T_ATRIB (266) 8 9
T_MINUS (267) 32 39
T_DIV (268) 40
T_IGUAL (269) 41
T_DIFERENTE (270) 42
T_MAIOR (271) 43
T_MENOR (272) 44
T_MAIOR_IGUAL (273) 45
T_MENOR_IGUAL (274) 46
T_NOT (275) 33
T_PAREN_L (276) 18
T_PAREN_R (277) 18
T_AND (278) 47
T_OR (279) 48
T_COLCH_L (280) 9 16 31
T_COLCH_R (281) 9 16 31
T_TINT (282) 35
T_TDOUBLE (283) 34
T_TBOOL (284) 36
T_WHILE (285) 10
T_END (286) 6 10 11 12
T_DO (287) 10
T_IF (288) 11 12
T_THEN (289) 11 12
T_ELSE (290) 12
T_DEF (291) 6
T_TYPE (292) 6
T_VIRGULA (293) 22 24
T_DECL (294) 6 15 16
T_FUNC (295)
T_RETURN (296)
T_FUNCDECL (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
lines (45)
    on left: 2 3, on right: 1 3 10 11 12
line (46)
    on left: 4 5 6, on right: 2 3
cmd (47)
    on left: 7 8 9 10 11 12, on right: 5
componentDecl (48)
    on left: 13 14, on right: 6 14
decl (49)
    on left: 15 16, on right: 7 13 14
expr (50)
    on left: 17 18 19 20, on right: 8 9 10 11 12 18 19 20 32 33
varAr (51)
    on left: 21 22, on right: 16 22
var (52)
    on left: 23 24, on right: 15 24
value (53)
    on left: 25 26 27 28 29 30 31, on right: 9 17 31
unOp (54)
    on left: 32 33, on right: 29
type (55)
    on left: 34 35 36, on right: 15 16
op (56)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 19


State 0

    0 $accept: . program $end

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    program  go to state 9
    lines    go to state 10
    line     go to state 11
    cmd      go to state 12
    decl     go to state 13
    type     go to state 14


State 1

    8 cmd: T_ID . T_ATRIB expr T_NL
    9    | T_ID . T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL

    T_ATRIB    shift, and go to state 15
    T_COLCH_L  shift, and go to state 16


State 2

    4 line: T_NL .

    $default  reduce using rule 4 (line)


State 3

   35 type: T_TINT .

    $default  reduce using rule 35 (type)


State 4

   34 type: T_TDOUBLE .

    $default  reduce using rule 34 (type)


State 5

   36 type: T_TBOOL .

    $default  reduce using rule 36 (type)


State 6

   10 cmd: T_WHILE . expr T_DO lines T_END T_WHILE

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 25
    value  go to state 26
    unOp   go to state 27


State 7

   11 cmd: T_IF . expr T_THEN lines T_END T_IF
   12    | T_IF . expr T_THEN lines T_ELSE lines T_END T_IF

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 28
    value  go to state 26
    unOp   go to state 27


State 8

    6 line: T_DEF . T_TYPE T_DECL T_ID componentDecl T_END T_DEF

    T_TYPE  shift, and go to state 29


State 9

    0 $accept: program . $end

    $end  shift, and go to state 30


State 10

    1 program: lines .
    3 lines: lines . line

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    $default  reduce using rule 1 (program)

    line  go to state 31
    cmd   go to state 12
    decl  go to state 13
    type  go to state 14


State 11

    2 lines: line .

    $default  reduce using rule 2 (lines)


State 12

    5 line: cmd .

    $default  reduce using rule 5 (line)


State 13

    7 cmd: decl .

    $default  reduce using rule 7 (cmd)


State 14

   15 decl: type . T_DECL var T_NL
   16     | type . T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL

    T_COLCH_L  shift, and go to state 32
    T_DECL     shift, and go to state 33


State 15

    8 cmd: T_ID T_ATRIB . expr T_NL

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 34
    value  go to state 26
    unOp   go to state 27


State 16

    9 cmd: T_ID T_COLCH_L . value T_COLCH_R T_ATRIB expr T_NL

    T_ID      shift, and go to state 17
    T_INT     shift, and go to state 18
    T_DOUBLE  shift, and go to state 19
    T_TRUE    shift, and go to state 20
    T_FALSE   shift, and go to state 21
    T_MINUS   shift, and go to state 22
    T_NOT     shift, and go to state 23

    value  go to state 35
    unOp   go to state 27


State 17

   30 value: T_ID .
   31      | T_ID . T_COLCH_L value T_COLCH_R

    T_COLCH_L  shift, and go to state 36

    $default  reduce using rule 30 (value)


State 18

   25 value: T_INT .

    $default  reduce using rule 25 (value)


State 19

   26 value: T_DOUBLE .

    $default  reduce using rule 26 (value)


State 20

   27 value: T_TRUE .

    $default  reduce using rule 27 (value)


State 21

   28 value: T_FALSE .

    $default  reduce using rule 28 (value)


State 22

   32 unOp: T_MINUS . expr

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 37
    value  go to state 26
    unOp   go to state 27


State 23

   33 unOp: T_NOT . expr

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 38
    value  go to state 26
    unOp   go to state 27


State 24

   18 expr: T_PAREN_L . expr T_PAREN_R

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 39
    value  go to state 26
    unOp   go to state 27


State 25

   10 cmd: T_WHILE expr . T_DO lines T_END T_WHILE
   19 expr: expr . op expr
   20     | expr . error

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52
    T_DO           shift, and go to state 53

    op  go to state 54


State 26

   17 expr: value .

    $default  reduce using rule 17 (expr)


State 27

   29 value: unOp .

    $default  reduce using rule 29 (value)


State 28

   11 cmd: T_IF expr . T_THEN lines T_END T_IF
   12    | T_IF expr . T_THEN lines T_ELSE lines T_END T_IF
   19 expr: expr . op expr
   20     | expr . error

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52
    T_THEN         shift, and go to state 55

    op  go to state 54


State 29

    6 line: T_DEF T_TYPE . T_DECL T_ID componentDecl T_END T_DEF

    T_DECL  shift, and go to state 56


State 30

    0 $accept: program $end .

    $default  accept


State 31

    3 lines: lines line .

    $default  reduce using rule 3 (lines)


State 32

   16 decl: type T_COLCH_L . T_INT T_COLCH_R T_DECL varAr T_NL

    T_INT  shift, and go to state 57


State 33

   15 decl: type T_DECL . var T_NL

    T_ID  shift, and go to state 58

    var  go to state 59


State 34

    8 cmd: T_ID T_ATRIB expr . T_NL
   19 expr: expr . op expr
   20     | expr . error

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_NL           shift, and go to state 60
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52

    op  go to state 54


State 35

    9 cmd: T_ID T_COLCH_L value . T_COLCH_R T_ATRIB expr T_NL

    T_COLCH_R  shift, and go to state 61


State 36

   31 value: T_ID T_COLCH_L . value T_COLCH_R

    T_ID      shift, and go to state 17
    T_INT     shift, and go to state 18
    T_DOUBLE  shift, and go to state 19
    T_TRUE    shift, and go to state 20
    T_FALSE   shift, and go to state 21
    T_MINUS   shift, and go to state 22
    T_NOT     shift, and go to state 23

    value  go to state 62
    unOp   go to state 27


State 37

   19 expr: expr . op expr
   20     | expr . error
   32 unOp: T_MINUS expr .

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52

    error          [reduce using rule 32 (unOp)]
    T_PLUS         [reduce using rule 32 (unOp)]
    T_MULT         [reduce using rule 32 (unOp)]
    T_NL           reduce using rule 32 (unOp)
    T_MINUS        [reduce using rule 32 (unOp)]
    T_DIV          [reduce using rule 32 (unOp)]
    T_IGUAL        [reduce using rule 32 (unOp)]
    T_DIFERENTE    [reduce using rule 32 (unOp)]
    T_MAIOR        [reduce using rule 32 (unOp)]
    T_MENOR        [reduce using rule 32 (unOp)]
    T_MAIOR_IGUAL  [reduce using rule 32 (unOp)]
    T_MENOR_IGUAL  [reduce using rule 32 (unOp)]
    T_PAREN_R      reduce using rule 32 (unOp)
    T_AND          [reduce using rule 32 (unOp)]
    T_OR           [reduce using rule 32 (unOp)]
    T_COLCH_R      reduce using rule 32 (unOp)
    T_DO           reduce using rule 32 (unOp)
    T_THEN         reduce using rule 32 (unOp)

    op  go to state 54


State 38

   19 expr: expr . op expr
   20     | expr . error
   33 unOp: T_NOT expr .

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52

    error          [reduce using rule 33 (unOp)]
    T_PLUS         [reduce using rule 33 (unOp)]
    T_MULT         [reduce using rule 33 (unOp)]
    T_NL           reduce using rule 33 (unOp)
    T_MINUS        [reduce using rule 33 (unOp)]
    T_DIV          [reduce using rule 33 (unOp)]
    T_IGUAL        [reduce using rule 33 (unOp)]
    T_DIFERENTE    [reduce using rule 33 (unOp)]
    T_MAIOR        [reduce using rule 33 (unOp)]
    T_MENOR        [reduce using rule 33 (unOp)]
    T_MAIOR_IGUAL  [reduce using rule 33 (unOp)]
    T_MENOR_IGUAL  [reduce using rule 33 (unOp)]
    T_PAREN_R      reduce using rule 33 (unOp)
    T_AND          [reduce using rule 33 (unOp)]
    T_OR           [reduce using rule 33 (unOp)]
    T_COLCH_R      reduce using rule 33 (unOp)
    T_DO           reduce using rule 33 (unOp)
    T_THEN         reduce using rule 33 (unOp)

    op  go to state 54


State 39

   18 expr: T_PAREN_L expr . T_PAREN_R
   19     | expr . op expr
   20     | expr . error

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_PAREN_R      shift, and go to state 63
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52

    op  go to state 54


State 40

   20 expr: expr error .

    $default  reduce using rule 20 (expr)


State 41

   37 op: T_PLUS .

    $default  reduce using rule 37 (op)


State 42

   38 op: T_MULT .

    $default  reduce using rule 38 (op)


State 43

   39 op: T_MINUS .

    $default  reduce using rule 39 (op)


State 44

   40 op: T_DIV .

    $default  reduce using rule 40 (op)


State 45

   41 op: T_IGUAL .

    $default  reduce using rule 41 (op)


State 46

   42 op: T_DIFERENTE .

    $default  reduce using rule 42 (op)


State 47

   43 op: T_MAIOR .

    $default  reduce using rule 43 (op)


State 48

   44 op: T_MENOR .

    $default  reduce using rule 44 (op)


State 49

   45 op: T_MAIOR_IGUAL .

    $default  reduce using rule 45 (op)


State 50

   46 op: T_MENOR_IGUAL .

    $default  reduce using rule 46 (op)


State 51

   47 op: T_AND .

    $default  reduce using rule 47 (op)


State 52

   48 op: T_OR .

    $default  reduce using rule 48 (op)


State 53

   10 cmd: T_WHILE expr T_DO . lines T_END T_WHILE

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    lines  go to state 64
    line   go to state 11
    cmd    go to state 12
    decl   go to state 13
    type   go to state 14


State 54

   19 expr: expr op . expr

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 65
    value  go to state 26
    unOp   go to state 27


State 55

   11 cmd: T_IF expr T_THEN . lines T_END T_IF
   12    | T_IF expr T_THEN . lines T_ELSE lines T_END T_IF

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    lines  go to state 66
    line   go to state 11
    cmd    go to state 12
    decl   go to state 13
    type   go to state 14


State 56

    6 line: T_DEF T_TYPE T_DECL . T_ID componentDecl T_END T_DEF

    T_ID  shift, and go to state 67


State 57

   16 decl: type T_COLCH_L T_INT . T_COLCH_R T_DECL varAr T_NL

    T_COLCH_R  shift, and go to state 68


State 58

   23 var: T_ID .

    $default  reduce using rule 23 (var)


State 59

   15 decl: type T_DECL var . T_NL
   24 var: var . T_VIRGULA T_ID

    T_NL       shift, and go to state 69
    T_VIRGULA  shift, and go to state 70


State 60

    8 cmd: T_ID T_ATRIB expr T_NL .

    $default  reduce using rule 8 (cmd)


State 61

    9 cmd: T_ID T_COLCH_L value T_COLCH_R . T_ATRIB expr T_NL

    T_ATRIB  shift, and go to state 71


State 62

   31 value: T_ID T_COLCH_L value . T_COLCH_R

    T_COLCH_R  shift, and go to state 72


State 63

   18 expr: T_PAREN_L expr T_PAREN_R .

    $default  reduce using rule 18 (expr)


State 64

    3 lines: lines . line
   10 cmd: T_WHILE expr T_DO lines . T_END T_WHILE

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_END      shift, and go to state 73
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    line  go to state 31
    cmd   go to state 12
    decl  go to state 13
    type  go to state 14


State 65

   19 expr: expr . op expr
   19     | expr op expr .
   20     | expr . error

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52

    error          [reduce using rule 19 (expr)]
    T_PLUS         [reduce using rule 19 (expr)]
    T_MULT         [reduce using rule 19 (expr)]
    T_NL           reduce using rule 19 (expr)
    T_MINUS        [reduce using rule 19 (expr)]
    T_DIV          [reduce using rule 19 (expr)]
    T_IGUAL        [reduce using rule 19 (expr)]
    T_DIFERENTE    [reduce using rule 19 (expr)]
    T_MAIOR        [reduce using rule 19 (expr)]
    T_MENOR        [reduce using rule 19 (expr)]
    T_MAIOR_IGUAL  [reduce using rule 19 (expr)]
    T_MENOR_IGUAL  [reduce using rule 19 (expr)]
    T_PAREN_R      reduce using rule 19 (expr)
    T_AND          [reduce using rule 19 (expr)]
    T_OR           [reduce using rule 19 (expr)]
    T_COLCH_R      reduce using rule 19 (expr)
    T_DO           reduce using rule 19 (expr)
    T_THEN         reduce using rule 19 (expr)

    op  go to state 54


State 66

    3 lines: lines . line
   11 cmd: T_IF expr T_THEN lines . T_END T_IF
   12    | T_IF expr T_THEN lines . T_ELSE lines T_END T_IF

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_END      shift, and go to state 74
    T_IF       shift, and go to state 7
    T_ELSE     shift, and go to state 75
    T_DEF      shift, and go to state 8

    line  go to state 31
    cmd   go to state 12
    decl  go to state 13
    type  go to state 14


State 67

    6 line: T_DEF T_TYPE T_DECL T_ID . componentDecl T_END T_DEF

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    componentDecl  go to state 76
    decl           go to state 77
    type           go to state 14


State 68

   16 decl: type T_COLCH_L T_INT T_COLCH_R . T_DECL varAr T_NL

    T_DECL  shift, and go to state 78


State 69

   15 decl: type T_DECL var T_NL .

    $default  reduce using rule 15 (decl)


State 70

   24 var: var T_VIRGULA . T_ID

    T_ID  shift, and go to state 79


State 71

    9 cmd: T_ID T_COLCH_L value T_COLCH_R T_ATRIB . expr T_NL

    T_ID       shift, and go to state 17
    T_INT      shift, and go to state 18
    T_DOUBLE   shift, and go to state 19
    T_TRUE     shift, and go to state 20
    T_FALSE    shift, and go to state 21
    T_MINUS    shift, and go to state 22
    T_NOT      shift, and go to state 23
    T_PAREN_L  shift, and go to state 24

    expr   go to state 80
    value  go to state 26
    unOp   go to state 27


State 72

   31 value: T_ID T_COLCH_L value T_COLCH_R .

    $default  reduce using rule 31 (value)


State 73

   10 cmd: T_WHILE expr T_DO lines T_END . T_WHILE

    T_WHILE  shift, and go to state 81


State 74

   11 cmd: T_IF expr T_THEN lines T_END . T_IF

    T_IF  shift, and go to state 82


State 75

   12 cmd: T_IF expr T_THEN lines T_ELSE . lines T_END T_IF

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    lines  go to state 83
    line   go to state 11
    cmd    go to state 12
    decl   go to state 13
    type   go to state 14


State 76

    6 line: T_DEF T_TYPE T_DECL T_ID componentDecl . T_END T_DEF
   14 componentDecl: componentDecl . decl

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_END      shift, and go to state 84

    decl  go to state 85
    type  go to state 14


State 77

   13 componentDecl: decl .

    $default  reduce using rule 13 (componentDecl)


State 78

   16 decl: type T_COLCH_L T_INT T_COLCH_R T_DECL . varAr T_NL

    T_ID  shift, and go to state 86

    varAr  go to state 87


State 79

   24 var: var T_VIRGULA T_ID .

    $default  reduce using rule 24 (var)


State 80

    9 cmd: T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr . T_NL
   19 expr: expr . op expr
   20     | expr . error

    error          shift, and go to state 40
    T_PLUS         shift, and go to state 41
    T_MULT         shift, and go to state 42
    T_NL           shift, and go to state 88
    T_MINUS        shift, and go to state 43
    T_DIV          shift, and go to state 44
    T_IGUAL        shift, and go to state 45
    T_DIFERENTE    shift, and go to state 46
    T_MAIOR        shift, and go to state 47
    T_MENOR        shift, and go to state 48
    T_MAIOR_IGUAL  shift, and go to state 49
    T_MENOR_IGUAL  shift, and go to state 50
    T_AND          shift, and go to state 51
    T_OR           shift, and go to state 52

    op  go to state 54


State 81

   10 cmd: T_WHILE expr T_DO lines T_END T_WHILE .

    $default  reduce using rule 10 (cmd)


State 82

   11 cmd: T_IF expr T_THEN lines T_END T_IF .

    $default  reduce using rule 11 (cmd)


State 83

    3 lines: lines . line
   12 cmd: T_IF expr T_THEN lines T_ELSE lines . T_END T_IF

    T_ID       shift, and go to state 1
    T_NL       shift, and go to state 2
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_END      shift, and go to state 89
    T_IF       shift, and go to state 7
    T_DEF      shift, and go to state 8

    line  go to state 31
    cmd   go to state 12
    decl  go to state 13
    type  go to state 14


State 84

    6 line: T_DEF T_TYPE T_DECL T_ID componentDecl T_END . T_DEF

    T_DEF  shift, and go to state 90


State 85

   14 componentDecl: componentDecl decl .

    $default  reduce using rule 14 (componentDecl)


State 86

   21 varAr: T_ID .

    $default  reduce using rule 21 (varAr)


State 87

   16 decl: type T_COLCH_L T_INT T_COLCH_R T_DECL varAr . T_NL
   22 varAr: varAr . T_VIRGULA T_ID

    T_NL       shift, and go to state 91
    T_VIRGULA  shift, and go to state 92


State 88

    9 cmd: T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL .

    $default  reduce using rule 9 (cmd)


State 89

   12 cmd: T_IF expr T_THEN lines T_ELSE lines T_END . T_IF

    T_IF  shift, and go to state 93


State 90

    6 line: T_DEF T_TYPE T_DECL T_ID componentDecl T_END T_DEF .

    $default  reduce using rule 6 (line)


State 91

   16 decl: type T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL .

    $default  reduce using rule 16 (decl)


State 92

   22 varAr: varAr T_VIRGULA . T_ID

    T_ID  shift, and go to state 94


State 93

   12 cmd: T_IF expr T_THEN lines T_ELSE lines T_END T_IF .

    $default  reduce using rule 12 (cmd)


State 94

   22 varAr: varAr T_VIRGULA T_ID .

    $default  reduce using rule 22 (varAr)
