State 41 conflicts: 1 shift/reduce
State 48 conflicts: 13 shift/reduce
State 49 conflicts: 13 shift/reduce
State 85 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: lines

    2 lines: line
    3      | lines line

    4 line: T_NL
    5     | cmd
    6     | T_DEF T_TYPE T_DECL T_ID newscope componentDecl T_END killcscope T_DEF
    7     | T_FUNCDECL T_FUNC declFunc
    8     | T_DEF T_FUNC defFunc T_END killscope T_DEF

    9 declFunc: type T_DECL T_ID T_PAREN_L paramList T_PAREN_R T_NL

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList T_PAREN_R funclines fnewScope T_RETURN expr

   11 idFunc: T_ID

   12 fnewScope: %empty

   13 funclines: cmd
   14          | funclines cmd

   15 paramList: %empty
   16          | type T_DECL T_ID
   17          | paramList T_VIRGULA type T_DECL T_ID

   18 cmd: decl
   19    | conds
   20    | T_ID T_ATRIB expr T_NL
   21    | T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID T_ATRIB expr T_NL
   22    | T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL
   23    | T_ID T_POINT T_ID T_ATRIB expr T_NL
   24    | T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL

   25 conds: T_WHILE expr T_DO newscope lines T_END killscope T_WHILE
   26      | T_IF expr T_THEN newscope lines T_END killscope T_IF
   27      | T_IF expr T_THEN newscope lines T_ELSE enewscope lines T_END killscope T_IF

   28 newscope: %empty

   29 enewscope: %empty

   30 killscope: %empty

   31 killcscope: %empty

   32 componentDecl: decl
   33              | componentDecl decl

   34 decl: type T_DECL var T_NL
   35     | type T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL
   36     | T_ID T_DECL var T_NL
   37     | T_ID T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL

   38 expr: value
   39     | T_PAREN_L expr T_PAREN_R
   40     | expr op expr
   41     | expr error

   42 varAr: T_ID
   43      | varAr T_VIRGULA T_ID

   44 var: T_ID
   45    | var T_VIRGULA T_ID

   46 value: T_INT
   47      | T_DOUBLE
   48      | T_TRUE
   49      | T_FALSE
   50      | unOp
   51      | T_ID
   52      | T_ID T_COLCH_L value T_COLCH_R
   53      | T_ID T_POINT T_ID
   54      | T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R
   55      | T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID

   56 unOp: T_MINUS expr
   57     | T_NOT expr

   58 type: T_TDOUBLE
   59     | T_TINT
   60     | T_TBOOL

   61 op: T_PLUS
   62   | T_MULT
   63   | T_MINUS
   64   | T_DIV
   65   | T_IGUAL
   66   | T_DIFERENTE
   67   | T_MAIOR
   68   | T_MENOR
   69   | T_MAIOR_IGUAL
   70   | T_MENOR_IGUAL
   71   | T_AND
   72   | T_OR


Terminals, with rules where they appear

$end (0) 0
error (256) 41
T_ID (258) 6 9 11 16 17 20 21 22 23 24 36 37 42 43 44 45 51 52 53 54
    55
T_INT (259) 35 37 46
T_DOUBLE (260) 47
T_TRUE (261) 48
T_FALSE (262) 49
T_PLUS (263) 61
T_MULT (264) 62
T_NL (265) 4 9 20 21 22 23 24 34 35 36 37
T_ATRIB (266) 20 21 22 23 24
T_MINUS (267) 56 63
T_DIV (268) 64
T_IGUAL (269) 65
T_DIFERENTE (270) 66
T_MAIOR (271) 67
T_MENOR (272) 68
T_MAIOR_IGUAL (273) 69
T_MENOR_IGUAL (274) 70
T_NOT (275) 57
T_PAREN_L (276) 9 10 39
T_PAREN_R (277) 9 10 39
T_AND (278) 71
T_OR (279) 72
T_COLCH_L (280) 21 22 24 35 37 52 54 55
T_COLCH_R (281) 21 22 24 35 37 52 54 55
T_POINT (282) 21 23 24 53 54 55
T_TINT (283) 59
T_TDOUBLE (284) 58
T_TBOOL (285) 60
T_WHILE (286) 25
T_END (287) 6 8 25 26 27
T_DO (288) 25
T_IF (289) 26 27
T_THEN (290) 26 27
T_ELSE (291) 27
T_DEF (292) 6 8
T_TYPE (293) 6
T_VIRGULA (294) 17 43 45
T_DECL (295) 6 9 10 16 17 34 35 36 37
T_FUNC (296) 7 8
T_RETURN (297) 10
T_FUNCDECL (298) 7


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
lines (46)
    on left: 2 3, on right: 1 3 25 26 27
line (47)
    on left: 4 5 6 7 8, on right: 2 3
declFunc (48)
    on left: 9, on right: 7
defFunc (49)
    on left: 10, on right: 8
idFunc (50)
    on left: 11, on right: 10
fnewScope (51)
    on left: 12, on right: 10
funclines (52)
    on left: 13 14, on right: 10 14
paramList (53)
    on left: 15 16 17, on right: 9 10 17
cmd (54)
    on left: 18 19 20 21 22 23 24, on right: 5 13 14
conds (55)
    on left: 25 26 27, on right: 19
newscope (56)
    on left: 28, on right: 6 25 26 27
enewscope (57)
    on left: 29, on right: 27
killscope (58)
    on left: 30, on right: 8 25 26 27
killcscope (59)
    on left: 31, on right: 6
componentDecl (60)
    on left: 32 33, on right: 6 33
decl (61)
    on left: 34 35 36 37, on right: 18 32 33
expr (62)
    on left: 38 39 40 41, on right: 10 20 21 22 23 24 25 26 27 39 40
    41 56 57
varAr (63)
    on left: 42 43, on right: 35 37 43
var (64)
    on left: 44 45, on right: 34 36 45
value (65)
    on left: 46 47 48 49 50 51 52 53 54 55, on right: 21 22 24 38 52
    54 55
unOp (66)
    on left: 56 57, on right: 50
type (67)
    on left: 58 59 60, on right: 9 10 16 17 34 35
op (68)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72, on right: 40


State 0

    0 $accept: . program $end

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    program  go to state 10
    lines    go to state 11
    line     go to state 12
    cmd      go to state 13
    conds    go to state 14
    decl     go to state 15
    type     go to state 16


State 1

   20 cmd: T_ID . T_ATRIB expr T_NL
   21    | T_ID . T_COLCH_L value T_COLCH_R T_POINT T_ID T_ATRIB expr T_NL
   22    | T_ID . T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL
   23    | T_ID . T_POINT T_ID T_ATRIB expr T_NL
   24    | T_ID . T_POINT T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL
   36 decl: T_ID . T_DECL var T_NL
   37     | T_ID . T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL

    T_ATRIB    shift, and go to state 17
    T_COLCH_L  shift, and go to state 18
    T_POINT    shift, and go to state 19
    T_DECL     shift, and go to state 20


State 2

    4 line: T_NL .

    $default  reduce using rule 4 (line)


State 3

   59 type: T_TINT .

    $default  reduce using rule 59 (type)


State 4

   58 type: T_TDOUBLE .

    $default  reduce using rule 58 (type)


State 5

   60 type: T_TBOOL .

    $default  reduce using rule 60 (type)


State 6

   25 conds: T_WHILE . expr T_DO newscope lines T_END killscope T_WHILE

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 29
    value  go to state 30
    unOp   go to state 31


State 7

   26 conds: T_IF . expr T_THEN newscope lines T_END killscope T_IF
   27      | T_IF . expr T_THEN newscope lines T_ELSE enewscope lines T_END killscope T_IF

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 32
    value  go to state 30
    unOp   go to state 31


State 8

    6 line: T_DEF . T_TYPE T_DECL T_ID newscope componentDecl T_END killcscope T_DEF
    8     | T_DEF . T_FUNC defFunc T_END killscope T_DEF

    T_TYPE  shift, and go to state 33
    T_FUNC  shift, and go to state 34


State 9

    7 line: T_FUNCDECL . T_FUNC declFunc

    T_FUNC  shift, and go to state 35


State 10

    0 $accept: program . $end

    $end  shift, and go to state 36


State 11

    1 program: lines .
    3 lines: lines . line

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    $default  reduce using rule 1 (program)

    line   go to state 37
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 12

    2 lines: line .

    $default  reduce using rule 2 (lines)


State 13

    5 line: cmd .

    $default  reduce using rule 5 (line)


State 14

   19 cmd: conds .

    $default  reduce using rule 19 (cmd)


State 15

   18 cmd: decl .

    $default  reduce using rule 18 (cmd)


State 16

   34 decl: type . T_DECL var T_NL
   35     | type . T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL

    T_COLCH_L  shift, and go to state 38
    T_DECL     shift, and go to state 39


State 17

   20 cmd: T_ID T_ATRIB . expr T_NL

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 40
    value  go to state 30
    unOp   go to state 31


State 18

   21 cmd: T_ID T_COLCH_L . value T_COLCH_R T_POINT T_ID T_ATRIB expr T_NL
   22    | T_ID T_COLCH_L . value T_COLCH_R T_ATRIB expr T_NL
   37 decl: T_ID T_COLCH_L . T_INT T_COLCH_R T_DECL varAr T_NL

    T_ID      shift, and go to state 21
    T_INT     shift, and go to state 41
    T_DOUBLE  shift, and go to state 23
    T_TRUE    shift, and go to state 24
    T_FALSE   shift, and go to state 25
    T_MINUS   shift, and go to state 26
    T_NOT     shift, and go to state 27

    value  go to state 42
    unOp   go to state 31


State 19

   23 cmd: T_ID T_POINT . T_ID T_ATRIB expr T_NL
   24    | T_ID T_POINT . T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL

    T_ID  shift, and go to state 43


State 20

   36 decl: T_ID T_DECL . var T_NL

    T_ID  shift, and go to state 44

    var  go to state 45


State 21

   51 value: T_ID .
   52      | T_ID . T_COLCH_L value T_COLCH_R
   53      | T_ID . T_POINT T_ID
   54      | T_ID . T_POINT T_ID T_COLCH_L value T_COLCH_R
   55      | T_ID . T_COLCH_L value T_COLCH_R T_POINT T_ID

    T_COLCH_L  shift, and go to state 46
    T_POINT    shift, and go to state 47

    $default  reduce using rule 51 (value)


State 22

   46 value: T_INT .

    $default  reduce using rule 46 (value)


State 23

   47 value: T_DOUBLE .

    $default  reduce using rule 47 (value)


State 24

   48 value: T_TRUE .

    $default  reduce using rule 48 (value)


State 25

   49 value: T_FALSE .

    $default  reduce using rule 49 (value)


State 26

   56 unOp: T_MINUS . expr

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 48
    value  go to state 30
    unOp   go to state 31


State 27

   57 unOp: T_NOT . expr

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 49
    value  go to state 30
    unOp   go to state 31


State 28

   39 expr: T_PAREN_L . expr T_PAREN_R

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 50
    value  go to state 30
    unOp   go to state 31


State 29

   25 conds: T_WHILE expr . T_DO newscope lines T_END killscope T_WHILE
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63
    T_DO           shift, and go to state 64

    op  go to state 65


State 30

   38 expr: value .

    $default  reduce using rule 38 (expr)


State 31

   50 value: unOp .

    $default  reduce using rule 50 (value)


State 32

   26 conds: T_IF expr . T_THEN newscope lines T_END killscope T_IF
   27      | T_IF expr . T_THEN newscope lines T_ELSE enewscope lines T_END killscope T_IF
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63
    T_THEN         shift, and go to state 66

    op  go to state 65


State 33

    6 line: T_DEF T_TYPE . T_DECL T_ID newscope componentDecl T_END killcscope T_DEF

    T_DECL  shift, and go to state 67


State 34

    8 line: T_DEF T_FUNC . defFunc T_END killscope T_DEF

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    defFunc  go to state 68
    type     go to state 69


State 35

    7 line: T_FUNCDECL T_FUNC . declFunc

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    declFunc  go to state 70
    type      go to state 71


State 36

    0 $accept: program $end .

    $default  accept


State 37

    3 lines: lines line .

    $default  reduce using rule 3 (lines)


State 38

   35 decl: type T_COLCH_L . T_INT T_COLCH_R T_DECL varAr T_NL

    T_INT  shift, and go to state 72


State 39

   34 decl: type T_DECL . var T_NL

    T_ID  shift, and go to state 44

    var  go to state 73


State 40

   20 cmd: T_ID T_ATRIB expr . T_NL
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_NL           shift, and go to state 74
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    op  go to state 65


State 41

   37 decl: T_ID T_COLCH_L T_INT . T_COLCH_R T_DECL varAr T_NL
   46 value: T_INT .

    T_COLCH_R  shift, and go to state 75

    T_COLCH_R  [reduce using rule 46 (value)]


State 42

   21 cmd: T_ID T_COLCH_L value . T_COLCH_R T_POINT T_ID T_ATRIB expr T_NL
   22    | T_ID T_COLCH_L value . T_COLCH_R T_ATRIB expr T_NL

    T_COLCH_R  shift, and go to state 76


State 43

   23 cmd: T_ID T_POINT T_ID . T_ATRIB expr T_NL
   24    | T_ID T_POINT T_ID . T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL

    T_ATRIB    shift, and go to state 77
    T_COLCH_L  shift, and go to state 78


State 44

   44 var: T_ID .

    $default  reduce using rule 44 (var)


State 45

   36 decl: T_ID T_DECL var . T_NL
   45 var: var . T_VIRGULA T_ID

    T_NL       shift, and go to state 79
    T_VIRGULA  shift, and go to state 80


State 46

   52 value: T_ID T_COLCH_L . value T_COLCH_R
   55      | T_ID T_COLCH_L . value T_COLCH_R T_POINT T_ID

    T_ID      shift, and go to state 21
    T_INT     shift, and go to state 22
    T_DOUBLE  shift, and go to state 23
    T_TRUE    shift, and go to state 24
    T_FALSE   shift, and go to state 25
    T_MINUS   shift, and go to state 26
    T_NOT     shift, and go to state 27

    value  go to state 81
    unOp   go to state 31


State 47

   53 value: T_ID T_POINT . T_ID
   54      | T_ID T_POINT . T_ID T_COLCH_L value T_COLCH_R

    T_ID  shift, and go to state 82


State 48

   40 expr: expr . op expr
   41     | expr . error
   56 unOp: T_MINUS expr .

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    error          [reduce using rule 56 (unOp)]
    T_PLUS         [reduce using rule 56 (unOp)]
    T_MULT         [reduce using rule 56 (unOp)]
    T_NL           reduce using rule 56 (unOp)
    T_MINUS        [reduce using rule 56 (unOp)]
    T_DIV          [reduce using rule 56 (unOp)]
    T_IGUAL        [reduce using rule 56 (unOp)]
    T_DIFERENTE    [reduce using rule 56 (unOp)]
    T_MAIOR        [reduce using rule 56 (unOp)]
    T_MENOR        [reduce using rule 56 (unOp)]
    T_MAIOR_IGUAL  [reduce using rule 56 (unOp)]
    T_MENOR_IGUAL  [reduce using rule 56 (unOp)]
    T_PAREN_R      reduce using rule 56 (unOp)
    T_AND          [reduce using rule 56 (unOp)]
    T_OR           [reduce using rule 56 (unOp)]
    T_COLCH_R      reduce using rule 56 (unOp)
    T_END          reduce using rule 56 (unOp)
    T_DO           reduce using rule 56 (unOp)
    T_THEN         reduce using rule 56 (unOp)

    op  go to state 65


State 49

   40 expr: expr . op expr
   41     | expr . error
   57 unOp: T_NOT expr .

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    error          [reduce using rule 57 (unOp)]
    T_PLUS         [reduce using rule 57 (unOp)]
    T_MULT         [reduce using rule 57 (unOp)]
    T_NL           reduce using rule 57 (unOp)
    T_MINUS        [reduce using rule 57 (unOp)]
    T_DIV          [reduce using rule 57 (unOp)]
    T_IGUAL        [reduce using rule 57 (unOp)]
    T_DIFERENTE    [reduce using rule 57 (unOp)]
    T_MAIOR        [reduce using rule 57 (unOp)]
    T_MENOR        [reduce using rule 57 (unOp)]
    T_MAIOR_IGUAL  [reduce using rule 57 (unOp)]
    T_MENOR_IGUAL  [reduce using rule 57 (unOp)]
    T_PAREN_R      reduce using rule 57 (unOp)
    T_AND          [reduce using rule 57 (unOp)]
    T_OR           [reduce using rule 57 (unOp)]
    T_COLCH_R      reduce using rule 57 (unOp)
    T_END          reduce using rule 57 (unOp)
    T_DO           reduce using rule 57 (unOp)
    T_THEN         reduce using rule 57 (unOp)

    op  go to state 65


State 50

   39 expr: T_PAREN_L expr . T_PAREN_R
   40     | expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_PAREN_R      shift, and go to state 83
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    op  go to state 65


State 51

   41 expr: expr error .

    $default  reduce using rule 41 (expr)


State 52

   61 op: T_PLUS .

    $default  reduce using rule 61 (op)


State 53

   62 op: T_MULT .

    $default  reduce using rule 62 (op)


State 54

   63 op: T_MINUS .

    $default  reduce using rule 63 (op)


State 55

   64 op: T_DIV .

    $default  reduce using rule 64 (op)


State 56

   65 op: T_IGUAL .

    $default  reduce using rule 65 (op)


State 57

   66 op: T_DIFERENTE .

    $default  reduce using rule 66 (op)


State 58

   67 op: T_MAIOR .

    $default  reduce using rule 67 (op)


State 59

   68 op: T_MENOR .

    $default  reduce using rule 68 (op)


State 60

   69 op: T_MAIOR_IGUAL .

    $default  reduce using rule 69 (op)


State 61

   70 op: T_MENOR_IGUAL .

    $default  reduce using rule 70 (op)


State 62

   71 op: T_AND .

    $default  reduce using rule 71 (op)


State 63

   72 op: T_OR .

    $default  reduce using rule 72 (op)


State 64

   25 conds: T_WHILE expr T_DO . newscope lines T_END killscope T_WHILE

    $default  reduce using rule 28 (newscope)

    newscope  go to state 84


State 65

   40 expr: expr op . expr

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 85
    value  go to state 30
    unOp   go to state 31


State 66

   26 conds: T_IF expr T_THEN . newscope lines T_END killscope T_IF
   27      | T_IF expr T_THEN . newscope lines T_ELSE enewscope lines T_END killscope T_IF

    $default  reduce using rule 28 (newscope)

    newscope  go to state 86


State 67

    6 line: T_DEF T_TYPE T_DECL . T_ID newscope componentDecl T_END killcscope T_DEF

    T_ID  shift, and go to state 87


State 68

    8 line: T_DEF T_FUNC defFunc . T_END killscope T_DEF

    T_END  shift, and go to state 88


State 69

   10 defFunc: type . T_DECL idFunc T_PAREN_L paramList T_PAREN_R funclines fnewScope T_RETURN expr

    T_DECL  shift, and go to state 89


State 70

    7 line: T_FUNCDECL T_FUNC declFunc .

    $default  reduce using rule 7 (line)


State 71

    9 declFunc: type . T_DECL T_ID T_PAREN_L paramList T_PAREN_R T_NL

    T_DECL  shift, and go to state 90


State 72

   35 decl: type T_COLCH_L T_INT . T_COLCH_R T_DECL varAr T_NL

    T_COLCH_R  shift, and go to state 91


State 73

   34 decl: type T_DECL var . T_NL
   45 var: var . T_VIRGULA T_ID

    T_NL       shift, and go to state 92
    T_VIRGULA  shift, and go to state 80


State 74

   20 cmd: T_ID T_ATRIB expr T_NL .

    $default  reduce using rule 20 (cmd)


State 75

   37 decl: T_ID T_COLCH_L T_INT T_COLCH_R . T_DECL varAr T_NL

    T_DECL  shift, and go to state 93


State 76

   21 cmd: T_ID T_COLCH_L value T_COLCH_R . T_POINT T_ID T_ATRIB expr T_NL
   22    | T_ID T_COLCH_L value T_COLCH_R . T_ATRIB expr T_NL

    T_ATRIB  shift, and go to state 94
    T_POINT  shift, and go to state 95


State 77

   23 cmd: T_ID T_POINT T_ID T_ATRIB . expr T_NL

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 96
    value  go to state 30
    unOp   go to state 31


State 78

   24 cmd: T_ID T_POINT T_ID T_COLCH_L . value T_COLCH_R T_ATRIB expr T_NL

    T_ID      shift, and go to state 21
    T_INT     shift, and go to state 22
    T_DOUBLE  shift, and go to state 23
    T_TRUE    shift, and go to state 24
    T_FALSE   shift, and go to state 25
    T_MINUS   shift, and go to state 26
    T_NOT     shift, and go to state 27

    value  go to state 97
    unOp   go to state 31


State 79

   36 decl: T_ID T_DECL var T_NL .

    $default  reduce using rule 36 (decl)


State 80

   45 var: var T_VIRGULA . T_ID

    T_ID  shift, and go to state 98


State 81

   52 value: T_ID T_COLCH_L value . T_COLCH_R
   55      | T_ID T_COLCH_L value . T_COLCH_R T_POINT T_ID

    T_COLCH_R  shift, and go to state 99


State 82

   53 value: T_ID T_POINT T_ID .
   54      | T_ID T_POINT T_ID . T_COLCH_L value T_COLCH_R

    T_COLCH_L  shift, and go to state 100

    $default  reduce using rule 53 (value)


State 83

   39 expr: T_PAREN_L expr T_PAREN_R .

    $default  reduce using rule 39 (expr)


State 84

   25 conds: T_WHILE expr T_DO newscope . lines T_END killscope T_WHILE

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    lines  go to state 101
    line   go to state 12
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 85

   40 expr: expr . op expr
   40     | expr op expr .
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    error          [reduce using rule 40 (expr)]
    T_PLUS         [reduce using rule 40 (expr)]
    T_MULT         [reduce using rule 40 (expr)]
    T_NL           reduce using rule 40 (expr)
    T_MINUS        [reduce using rule 40 (expr)]
    T_DIV          [reduce using rule 40 (expr)]
    T_IGUAL        [reduce using rule 40 (expr)]
    T_DIFERENTE    [reduce using rule 40 (expr)]
    T_MAIOR        [reduce using rule 40 (expr)]
    T_MENOR        [reduce using rule 40 (expr)]
    T_MAIOR_IGUAL  [reduce using rule 40 (expr)]
    T_MENOR_IGUAL  [reduce using rule 40 (expr)]
    T_PAREN_R      reduce using rule 40 (expr)
    T_AND          [reduce using rule 40 (expr)]
    T_OR           [reduce using rule 40 (expr)]
    T_COLCH_R      reduce using rule 40 (expr)
    T_END          reduce using rule 40 (expr)
    T_DO           reduce using rule 40 (expr)
    T_THEN         reduce using rule 40 (expr)

    op  go to state 65


State 86

   26 conds: T_IF expr T_THEN newscope . lines T_END killscope T_IF
   27      | T_IF expr T_THEN newscope . lines T_ELSE enewscope lines T_END killscope T_IF

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    lines  go to state 102
    line   go to state 12
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 87

    6 line: T_DEF T_TYPE T_DECL T_ID . newscope componentDecl T_END killcscope T_DEF

    $default  reduce using rule 28 (newscope)

    newscope  go to state 103


State 88

    8 line: T_DEF T_FUNC defFunc T_END . killscope T_DEF

    $default  reduce using rule 30 (killscope)

    killscope  go to state 104


State 89

   10 defFunc: type T_DECL . idFunc T_PAREN_L paramList T_PAREN_R funclines fnewScope T_RETURN expr

    T_ID  shift, and go to state 105

    idFunc  go to state 106


State 90

    9 declFunc: type T_DECL . T_ID T_PAREN_L paramList T_PAREN_R T_NL

    T_ID  shift, and go to state 107


State 91

   35 decl: type T_COLCH_L T_INT T_COLCH_R . T_DECL varAr T_NL

    T_DECL  shift, and go to state 108


State 92

   34 decl: type T_DECL var T_NL .

    $default  reduce using rule 34 (decl)


State 93

   37 decl: T_ID T_COLCH_L T_INT T_COLCH_R T_DECL . varAr T_NL

    T_ID  shift, and go to state 109

    varAr  go to state 110


State 94

   22 cmd: T_ID T_COLCH_L value T_COLCH_R T_ATRIB . expr T_NL

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 111
    value  go to state 30
    unOp   go to state 31


State 95

   21 cmd: T_ID T_COLCH_L value T_COLCH_R T_POINT . T_ID T_ATRIB expr T_NL

    T_ID  shift, and go to state 112


State 96

   23 cmd: T_ID T_POINT T_ID T_ATRIB expr . T_NL
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_NL           shift, and go to state 113
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    op  go to state 65


State 97

   24 cmd: T_ID T_POINT T_ID T_COLCH_L value . T_COLCH_R T_ATRIB expr T_NL

    T_COLCH_R  shift, and go to state 114


State 98

   45 var: var T_VIRGULA T_ID .

    $default  reduce using rule 45 (var)


State 99

   52 value: T_ID T_COLCH_L value T_COLCH_R .
   55      | T_ID T_COLCH_L value T_COLCH_R . T_POINT T_ID

    T_POINT  shift, and go to state 115

    $default  reduce using rule 52 (value)


State 100

   54 value: T_ID T_POINT T_ID T_COLCH_L . value T_COLCH_R

    T_ID      shift, and go to state 21
    T_INT     shift, and go to state 22
    T_DOUBLE  shift, and go to state 23
    T_TRUE    shift, and go to state 24
    T_FALSE   shift, and go to state 25
    T_MINUS   shift, and go to state 26
    T_NOT     shift, and go to state 27

    value  go to state 116
    unOp   go to state 31


State 101

    3 lines: lines . line
   25 conds: T_WHILE expr T_DO newscope lines . T_END killscope T_WHILE

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_END       shift, and go to state 117
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    line   go to state 37
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 102

    3 lines: lines . line
   26 conds: T_IF expr T_THEN newscope lines . T_END killscope T_IF
   27      | T_IF expr T_THEN newscope lines . T_ELSE enewscope lines T_END killscope T_IF

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_END       shift, and go to state 118
    T_IF        shift, and go to state 7
    T_ELSE      shift, and go to state 119
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    line   go to state 37
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 103

    6 line: T_DEF T_TYPE T_DECL T_ID newscope . componentDecl T_END killcscope T_DEF

    T_ID       shift, and go to state 120
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    componentDecl  go to state 121
    decl           go to state 122
    type           go to state 16


State 104

    8 line: T_DEF T_FUNC defFunc T_END killscope . T_DEF

    T_DEF  shift, and go to state 123


State 105

   11 idFunc: T_ID .

    $default  reduce using rule 11 (idFunc)


State 106

   10 defFunc: type T_DECL idFunc . T_PAREN_L paramList T_PAREN_R funclines fnewScope T_RETURN expr

    T_PAREN_L  shift, and go to state 124


State 107

    9 declFunc: type T_DECL T_ID . T_PAREN_L paramList T_PAREN_R T_NL

    T_PAREN_L  shift, and go to state 125


State 108

   35 decl: type T_COLCH_L T_INT T_COLCH_R T_DECL . varAr T_NL

    T_ID  shift, and go to state 109

    varAr  go to state 126


State 109

   42 varAr: T_ID .

    $default  reduce using rule 42 (varAr)


State 110

   37 decl: T_ID T_COLCH_L T_INT T_COLCH_R T_DECL varAr . T_NL
   43 varAr: varAr . T_VIRGULA T_ID

    T_NL       shift, and go to state 127
    T_VIRGULA  shift, and go to state 128


State 111

   22 cmd: T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr . T_NL
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_NL           shift, and go to state 129
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    op  go to state 65


State 112

   21 cmd: T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID . T_ATRIB expr T_NL

    T_ATRIB  shift, and go to state 130


State 113

   23 cmd: T_ID T_POINT T_ID T_ATRIB expr T_NL .

    $default  reduce using rule 23 (cmd)


State 114

   24 cmd: T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R . T_ATRIB expr T_NL

    T_ATRIB  shift, and go to state 131


State 115

   55 value: T_ID T_COLCH_L value T_COLCH_R T_POINT . T_ID

    T_ID  shift, and go to state 132


State 116

   54 value: T_ID T_POINT T_ID T_COLCH_L value . T_COLCH_R

    T_COLCH_R  shift, and go to state 133


State 117

   25 conds: T_WHILE expr T_DO newscope lines T_END . killscope T_WHILE

    $default  reduce using rule 30 (killscope)

    killscope  go to state 134


State 118

   26 conds: T_IF expr T_THEN newscope lines T_END . killscope T_IF

    $default  reduce using rule 30 (killscope)

    killscope  go to state 135


State 119

   27 conds: T_IF expr T_THEN newscope lines T_ELSE . enewscope lines T_END killscope T_IF

    $default  reduce using rule 29 (enewscope)

    enewscope  go to state 136


State 120

   36 decl: T_ID . T_DECL var T_NL
   37     | T_ID . T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL

    T_COLCH_L  shift, and go to state 137
    T_DECL     shift, and go to state 20


State 121

    6 line: T_DEF T_TYPE T_DECL T_ID newscope componentDecl . T_END killcscope T_DEF
   33 componentDecl: componentDecl . decl

    T_ID       shift, and go to state 120
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_END      shift, and go to state 138

    decl  go to state 139
    type  go to state 16


State 122

   32 componentDecl: decl .

    $default  reduce using rule 32 (componentDecl)


State 123

    8 line: T_DEF T_FUNC defFunc T_END killscope T_DEF .

    $default  reduce using rule 8 (line)


State 124

   10 defFunc: type T_DECL idFunc T_PAREN_L . paramList T_PAREN_R funclines fnewScope T_RETURN expr

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    $default  reduce using rule 15 (paramList)

    paramList  go to state 140
    type       go to state 141


State 125

    9 declFunc: type T_DECL T_ID T_PAREN_L . paramList T_PAREN_R T_NL

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    $default  reduce using rule 15 (paramList)

    paramList  go to state 142
    type       go to state 141


State 126

   35 decl: type T_COLCH_L T_INT T_COLCH_R T_DECL varAr . T_NL
   43 varAr: varAr . T_VIRGULA T_ID

    T_NL       shift, and go to state 143
    T_VIRGULA  shift, and go to state 128


State 127

   37 decl: T_ID T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL .

    $default  reduce using rule 37 (decl)


State 128

   43 varAr: varAr T_VIRGULA . T_ID

    T_ID  shift, and go to state 144


State 129

   22 cmd: T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL .

    $default  reduce using rule 22 (cmd)


State 130

   21 cmd: T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID T_ATRIB . expr T_NL

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 145
    value  go to state 30
    unOp   go to state 31


State 131

   24 cmd: T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R T_ATRIB . expr T_NL

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 146
    value  go to state 30
    unOp   go to state 31


State 132

   55 value: T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID .

    $default  reduce using rule 55 (value)


State 133

   54 value: T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R .

    $default  reduce using rule 54 (value)


State 134

   25 conds: T_WHILE expr T_DO newscope lines T_END killscope . T_WHILE

    T_WHILE  shift, and go to state 147


State 135

   26 conds: T_IF expr T_THEN newscope lines T_END killscope . T_IF

    T_IF  shift, and go to state 148


State 136

   27 conds: T_IF expr T_THEN newscope lines T_ELSE enewscope . lines T_END killscope T_IF

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    lines  go to state 149
    line   go to state 12
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 137

   37 decl: T_ID T_COLCH_L . T_INT T_COLCH_R T_DECL varAr T_NL

    T_INT  shift, and go to state 150


State 138

    6 line: T_DEF T_TYPE T_DECL T_ID newscope componentDecl T_END . killcscope T_DEF

    $default  reduce using rule 31 (killcscope)

    killcscope  go to state 151


State 139

   33 componentDecl: componentDecl decl .

    $default  reduce using rule 33 (componentDecl)


State 140

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList . T_PAREN_R funclines fnewScope T_RETURN expr
   17 paramList: paramList . T_VIRGULA type T_DECL T_ID

    T_PAREN_R  shift, and go to state 152
    T_VIRGULA  shift, and go to state 153


State 141

   16 paramList: type . T_DECL T_ID

    T_DECL  shift, and go to state 154


State 142

    9 declFunc: type T_DECL T_ID T_PAREN_L paramList . T_PAREN_R T_NL
   17 paramList: paramList . T_VIRGULA type T_DECL T_ID

    T_PAREN_R  shift, and go to state 155
    T_VIRGULA  shift, and go to state 153


State 143

   35 decl: type T_COLCH_L T_INT T_COLCH_R T_DECL varAr T_NL .

    $default  reduce using rule 35 (decl)


State 144

   43 varAr: varAr T_VIRGULA T_ID .

    $default  reduce using rule 43 (varAr)


State 145

   21 cmd: T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID T_ATRIB expr . T_NL
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_NL           shift, and go to state 156
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    op  go to state 65


State 146

   24 cmd: T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr . T_NL
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_NL           shift, and go to state 157
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    op  go to state 65


State 147

   25 conds: T_WHILE expr T_DO newscope lines T_END killscope T_WHILE .

    $default  reduce using rule 25 (conds)


State 148

   26 conds: T_IF expr T_THEN newscope lines T_END killscope T_IF .

    $default  reduce using rule 26 (conds)


State 149

    3 lines: lines . line
   27 conds: T_IF expr T_THEN newscope lines T_ELSE enewscope lines . T_END killscope T_IF

    T_ID        shift, and go to state 1
    T_NL        shift, and go to state 2
    T_TINT      shift, and go to state 3
    T_TDOUBLE   shift, and go to state 4
    T_TBOOL     shift, and go to state 5
    T_WHILE     shift, and go to state 6
    T_END       shift, and go to state 158
    T_IF        shift, and go to state 7
    T_DEF       shift, and go to state 8
    T_FUNCDECL  shift, and go to state 9

    line   go to state 37
    cmd    go to state 13
    conds  go to state 14
    decl   go to state 15
    type   go to state 16


State 150

   37 decl: T_ID T_COLCH_L T_INT . T_COLCH_R T_DECL varAr T_NL

    T_COLCH_R  shift, and go to state 75


State 151

    6 line: T_DEF T_TYPE T_DECL T_ID newscope componentDecl T_END killcscope . T_DEF

    T_DEF  shift, and go to state 159


State 152

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList T_PAREN_R . funclines fnewScope T_RETURN expr

    T_ID       shift, and go to state 1
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7

    funclines  go to state 160
    cmd        go to state 161
    conds      go to state 14
    decl       go to state 15
    type       go to state 16


State 153

   17 paramList: paramList T_VIRGULA . type T_DECL T_ID

    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5

    type  go to state 162


State 154

   16 paramList: type T_DECL . T_ID

    T_ID  shift, and go to state 163


State 155

    9 declFunc: type T_DECL T_ID T_PAREN_L paramList T_PAREN_R . T_NL

    T_NL  shift, and go to state 164


State 156

   21 cmd: T_ID T_COLCH_L value T_COLCH_R T_POINT T_ID T_ATRIB expr T_NL .

    $default  reduce using rule 21 (cmd)


State 157

   24 cmd: T_ID T_POINT T_ID T_COLCH_L value T_COLCH_R T_ATRIB expr T_NL .

    $default  reduce using rule 24 (cmd)


State 158

   27 conds: T_IF expr T_THEN newscope lines T_ELSE enewscope lines T_END . killscope T_IF

    $default  reduce using rule 30 (killscope)

    killscope  go to state 165


State 159

    6 line: T_DEF T_TYPE T_DECL T_ID newscope componentDecl T_END killcscope T_DEF .

    $default  reduce using rule 6 (line)


State 160

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList T_PAREN_R funclines . fnewScope T_RETURN expr
   14 funclines: funclines . cmd

    T_ID       shift, and go to state 1
    T_TINT     shift, and go to state 3
    T_TDOUBLE  shift, and go to state 4
    T_TBOOL    shift, and go to state 5
    T_WHILE    shift, and go to state 6
    T_IF       shift, and go to state 7

    $default  reduce using rule 12 (fnewScope)

    fnewScope  go to state 166
    cmd        go to state 167
    conds      go to state 14
    decl       go to state 15
    type       go to state 16


State 161

   13 funclines: cmd .

    $default  reduce using rule 13 (funclines)


State 162

   17 paramList: paramList T_VIRGULA type . T_DECL T_ID

    T_DECL  shift, and go to state 168


State 163

   16 paramList: type T_DECL T_ID .

    $default  reduce using rule 16 (paramList)


State 164

    9 declFunc: type T_DECL T_ID T_PAREN_L paramList T_PAREN_R T_NL .

    $default  reduce using rule 9 (declFunc)


State 165

   27 conds: T_IF expr T_THEN newscope lines T_ELSE enewscope lines T_END killscope . T_IF

    T_IF  shift, and go to state 169


State 166

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList T_PAREN_R funclines fnewScope . T_RETURN expr

    T_RETURN  shift, and go to state 170


State 167

   14 funclines: funclines cmd .

    $default  reduce using rule 14 (funclines)


State 168

   17 paramList: paramList T_VIRGULA type T_DECL . T_ID

    T_ID  shift, and go to state 171


State 169

   27 conds: T_IF expr T_THEN newscope lines T_ELSE enewscope lines T_END killscope T_IF .

    $default  reduce using rule 27 (conds)


State 170

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList T_PAREN_R funclines fnewScope T_RETURN . expr

    T_ID       shift, and go to state 21
    T_INT      shift, and go to state 22
    T_DOUBLE   shift, and go to state 23
    T_TRUE     shift, and go to state 24
    T_FALSE    shift, and go to state 25
    T_MINUS    shift, and go to state 26
    T_NOT      shift, and go to state 27
    T_PAREN_L  shift, and go to state 28

    expr   go to state 172
    value  go to state 30
    unOp   go to state 31


State 171

   17 paramList: paramList T_VIRGULA type T_DECL T_ID .

    $default  reduce using rule 17 (paramList)


State 172

   10 defFunc: type T_DECL idFunc T_PAREN_L paramList T_PAREN_R funclines fnewScope T_RETURN expr .
   40 expr: expr . op expr
   41     | expr . error

    error          shift, and go to state 51
    T_PLUS         shift, and go to state 52
    T_MULT         shift, and go to state 53
    T_MINUS        shift, and go to state 54
    T_DIV          shift, and go to state 55
    T_IGUAL        shift, and go to state 56
    T_DIFERENTE    shift, and go to state 57
    T_MAIOR        shift, and go to state 58
    T_MENOR        shift, and go to state 59
    T_MAIOR_IGUAL  shift, and go to state 60
    T_MENOR_IGUAL  shift, and go to state 61
    T_AND          shift, and go to state 62
    T_OR           shift, and go to state 63

    T_END  reduce using rule 10 (defFunc)

    op  go to state 65
